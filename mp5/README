README FOR DEMO STACK ABSTRACTION WITH MULTIPLE POLYMORPHIC INSTANCES
=====================================================================

this project will demonstrate a stack to show how big programs can be managed
where the programs in question use polymorphic classes.

TO BUILD THE PROJECT
--------------------

The shell command `make demo` builds and runs a polymorphic stack demo program.
All the demo does is output hello world, but it does so by pushing pieces on
two different stacks and then popping and printing them.

See `Makefile` for details on the relationships between the files included here

See `.h` header files for the interface specifications for each stack class or
subclass.

FILES
-----

* `README` -- this file
* `Makefile` -- input to `make` for building this code distribution
* `main.a` -- a main program to demonstrate
* `stack.h` -- interface for abstract stack class (no implementation)
* `arraystack.h` -- interface for array stack subclass
* `arraystack.a` -- implementation of array stack subclass
* `liststack.a` -- interface for linked list stack subclass
* `liststack.h` -- implementation of linked list stack subclass

AUTHORS
-------

Douglas W. Jones
and students from CS:2630 at the U of Iowa

KNOWN BUGS
----------

The array-stack constructor would be more useful if it took a parameter, the
size of the stack to be constructed.  If this was done, each different array
stack would have a different capacity.

Ideally, class stack should define STACKERROR, an exception, and abuse of
stacks should throw this exception.  We have not talked about exception
handling yet, so exception conditions are not tested and none are thrown.

As a consequence, there is no checking for stack overflow.  For array stacks,
this can occur if the limit for each stack is exceeded.  For list stacks,
it occurs if the heap fills so that Malloc returns NULL.  With this code,
stack overflow will either produce nonsense results or lead to a bus trap.

And, there is no checking for stack underflow.  Popping from an empty stack
will either return nonsense or cause a bus trap.
